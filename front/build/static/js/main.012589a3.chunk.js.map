{"version":3,"sources":["hooks/useReduxStatePropertie.ts","redux/actionTypes.ts","redux/actionCreators.ts","components/main/index.tsx","components/main/Main.tsx","components/UI/textInput/index.ts","components/UI/textInput/TextInput.tsx","helpers.ts","components/UI/loginButton/index.tsx","components/UI/loginButton/FormButton.tsx","components/authorization/index.tsx","components/authorization/Authorization.tsx","components/UI/customSpinner/index.ts","components/UI/customSpinner/CustomSpinner.tsx","components/profile/index.tsx","components/profile/Profile.tsx","components/admin/Admin.tsx","components/admin/index.tsx","App.tsx","redux/reducer.ts","appConfig.ts","services/authorizationService.ts","sagas/authorizationSaga.ts","sagas/rootSaga.ts","index.tsx"],"names":["useReduxStatePropertie","actionTypes","key","useSelector","state","setAuthorized","isAuthorized","type","SET_AUTHORIZED","payload","setSigninErrorMsg","errorMessage","SET_SIGNIN_ERROR_MSG","setLoader","isLoaderNecessary","SET_LOADER","signOut","SIGNOUT","Main","dispatch","useDispatch","searchGenreRef","useRef","useState","isStared","setStared","songsContent","setSongsContent","staredSongs","songGenre","songArtist","songName","inputs","setInputs","suggested","setSuggested","genreSuggested","handleChange","e","prevState","target","name","value","isAdmin","localStorage","getItem","a","text","fetch","then","response","json","genres","username","songs","length","reduce","acc","curr","isSongStared","includes","Number","songId","push","className","onClick","starSong","artist","currentState","to","removeItem","onChange","ref","onBlur","setTimeout","map","word","index","array","checked","viewBox","d","TextInput","placeholder","uniqueId","Date","now","toString","Math","random","substr","id","required","htmlFor","FormButton","Authorization","useEffect","document","forms","namedItem","login","focus","preventDefault","loginData","password","SIGNIN","SIGNUP","CustomSpinner","color","Profile","userInfo","setUserInfo","ratedMovies","setRatedMovies","favMovies","setFavMovies","getUsersInfo","useCallback","getFavMovies","movies","title","year","tags","getRatedMovies","count_rated","count_favorites","Admin","users","setUsers","userToPromote","setUserToPromote","setSongName","searchSongs","deleteSongById","deleteUser","getUsers","songToDelete","userId","AdminProps","App","content","useMemo","path","element","CHECK_AUTHORIZATION_STATUS","initialState","signInErrorMsg","reducer","action","appConfig","backendProtocol","backendAddress","AuthorizationService","signIn","signUp","this","signInWorker","signUpWorker","checkAuthorizationStatus","authorizationSaga","service","call","authorizationData","message","put","setItem","console","error","takeEvery","rootSaga","log","require","config","sagaMiddleware","createSagaMiddleware","enchancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","run","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.012589a3.chunk.js","sourcesContent":["import { useSelector } from \"react-redux\";\r\nimport { State } from \"../types/redux\";\r\n\r\n\r\nfunction useReduxStatePropertie<T = any>(key: keyof State) {\r\n  const value = useSelector((state: State) => state[key]);\r\n\r\n  // @ts-ignore\r\n  return value as T;\r\n};\r\n\r\nexport default useReduxStatePropertie;","enum actionTypes {\r\n  SET_AUTHORIZED = 'SET_AUTHORIZED',\r\n  SET_LOADER = 'SET_LOADER',\r\n  SIGNIN = 'SIGNIN',\r\n  SIGNUP = 'SIGNUP',\r\n  SIGNOUT = 'SIGNOUT',\r\n  CHECK_AUTHORIZATION_STATUS = 'CHECK_AUTHORIZATION_STATUS',\r\n  SET_SIGNIN_ERROR_MSG = 'SET_SIGNIN_ERROR_MSG'\r\n};\r\n\r\nexport default actionTypes;","import actionTypes from './actionTypes';\r\nimport {AnyAction} from \"redux\";\r\nimport {LoginData} from \"../types/redux\";\r\n\r\nexport interface IAction extends AnyAction {\r\n  type: actionTypes,\r\n  payload?: any\r\n}\r\n\r\nexport const setAuthorized = (isAuthorized: boolean): IAction => ({\r\n  type: actionTypes.SET_AUTHORIZED,\r\n  payload: isAuthorized\r\n});\r\n\r\nexport const signIn = (loginData: LoginData): IAction => ({\r\n  type: actionTypes.SIGNIN,\r\n  payload: loginData\r\n});\r\n\r\nexport const signUp = (loginData: LoginData): IAction => ({\r\n  type: actionTypes.SIGNUP,\r\n  payload: loginData\r\n});\r\n\r\nexport const setSigninErrorMsg = (errorMessage: string): IAction => ({\r\n  type: actionTypes.SET_SIGNIN_ERROR_MSG,\r\n  payload: errorMessage\r\n});\r\n\r\nexport const setLoader = (isLoaderNecessary: boolean): IAction => ({\r\n  type: actionTypes.SET_LOADER,\r\n  payload: isLoaderNecessary\r\n});\r\n\r\nexport const checkAuthorizationStatus = (): IAction => ({\r\n  type: actionTypes.CHECK_AUTHORIZATION_STATUS\r\n});\r\n\r\nexport const signOut = (): IAction => ({\r\n  type: actionTypes.SIGNOUT\r\n});\r\n","import Main from \"./Main\";\r\nexport default Main;","import './Main.scss';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {signOut} from \"../../redux/actionCreators\";\r\nimport {FormEvent, useRef, useState} from \"react\";\r\n// @ts-ignore\r\nimport ReactStars from \"react-rating-stars-component\";\r\n// @ts-ignore\r\nimport TagsInput from 'react-tagsinput';\r\nimport 'react-tagsinput/react-tagsinput.css';\r\nimport {Simulate} from \"react-dom/test-utils\";\r\n\r\nexport default function Main() {\r\n  const dispatch = useDispatch();\r\n  const searchGenreRef = useRef(null);\r\n  const [isStared, setStared] = useState<boolean>(false);\r\n  const [songsContent, setSongsContent] = useState<any>([]);\r\n  const [staredSongs, setStaredSongs] = useState([]);\r\n  const [inputs, setInputs]: any = useState({\r\n    songGenre: '',\r\n    songArtist: '',\r\n    songName: ''\r\n  });\r\n  const [suggested, setSuggested] = useState<string[]>([]);\r\n  const genreSuggested = useRef(null);\r\n  // @ts-ignore\r\n  const handleChange = (e: any) => setInputs(prevState => ({ ...prevState, [e.target.name]: e.target.value }));\r\n  const isAdmin = localStorage.getItem('isAdmin');\r\n\r\n  async function searchGenre(e: any) {\r\n    handleChange(e);\r\n    const text = e.target.value;\r\n    setSuggested((await fetch(`http://localhost:8080/genre/help?text=${text}&limit=${10}`)\r\n      .then((response: any) => response.json())).genres);\r\n  }\r\n\r\n  async function searchSongs() {\r\n    const {songName, songGenre, songArtist} = inputs;\r\n    const username = isStared ? localStorage.getItem('login') : 'NULL';\r\n    const songs = await fetch(`http://localhost:8080/song/getFiltred?name=${songName}&artist=${songArtist}&username=${username}&genres=${songGenre}&offset=${0}&limit=${20}`)\r\n      .then((response: any) => response.json());\r\n\r\n    if (songs.length === 0) {\r\n      return setSongsContent('Ни одной песни не было найдено');\r\n    }\r\n\r\n    setSongsContent(songs.reduce((acc: any, curr: any) => {\r\n      // @ts-ignore\r\n      const isSongStared: boolean = staredSongs.includes(Number(curr.songId));\r\n      acc.push(<div className={'song'}>\r\n        <div className={'song-buttons'}>\r\n          <button onClick={() => starSong(isSongStared, curr.songId)}\r\n                  className={`song-star ${isSongStared ? 'song-stared' : '' }`}>В избранное</button>\r\n        </div>\r\n        <span className={'song-field song-title'}>{curr.name}</span>\r\n        <span className={'song-field song-genres'}>Имя исполнителя: {curr.artist}</span>\r\n      </div>);\r\n      return acc;\r\n    }, []));\r\n  }\r\n\r\n  // async function searchsongs() {\r\n  //   const username = localStorage.getItem('login');\r\n  //   const songs: string[] = await fetch(`http://localhost:8080/song/getFiltred?title=${searchInput || ''}&year=${year || ''}&genres=${genre || ''}&tags=${tags.length == 0 ? '' : tags}&offset=0&limit=20`)\r\n  //     .then((response: any) => response.json());\r\n  //   const staredsongs: any[] = await fetch(`http://localhost:8080/user/getFavs?username=${username}`)\r\n  //     .then((response: any) => response.json());\r\n  //\r\n  //   if (songs.length === 0) {\r\n  //     return setsongContent('По вашему запросу ничего не найдено!');\r\n  //   }\r\n\r\n  //   setsongContent(songs.reduce((acc: any, curr: any) => {\r\n  //     const issongStared: boolean = staredsongs.includes(Number(curr.songId));\r\n  //     \r\n  //   }, []));\r\n  // }\r\n  \r\n  async function getStaredSongs() {\r\n    const username = localStorage.getItem('login');\r\n    setStaredSongs(await fetch(`http://localhost:8080/user/getFavs?username=${username}`).then((response) => response.json()));\r\n  }\r\n\r\n  async function starSong(currentState: boolean, songId: string) {\r\n    const username = localStorage.getItem('login');\r\n    return await fetch(`http://localhost:8080/fav/addSong?username=${username}&songId=${songId}&label=${currentState ? '0' : '1'}`)\r\n      .then((response: any) => response.json());\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <header className={'main-header'}>\r\n          <span className={'main-profilePage'}>{localStorage.getItem('login')}</span>\r\n          <h2 className={'promusic'}>ПРО-МЬЮЗИК</h2>\r\n        <div className={'main-helpersButtons'}>\r\n          {isAdmin &&\r\n          <Link to={'/admin'}>\r\n            <span className={'main-adminPage'}>Панель админа</span>\r\n          </Link>\r\n          }\r\n          <span className={'main-signout'} onClick={() => {\r\n            dispatch(signOut());\r\n            localStorage.removeItem('login');\r\n            localStorage.removeItem('password');\r\n          }}>Выйти</span>\r\n        </div>\r\n      </header>\r\n      <main className={'main'}>\r\n        <section className={'main-filters'}>\r\n          <div className={'main-sendFilters'}>\r\n            <div className={'main-searchFilter'}>\r\n              <span className={'main-name'}>Название песни</span>\r\n              <input className={'main-search'}\r\n                     name={'songName'}\r\n                     value={inputs.songName}\r\n                     onChange={handleChange}/>\r\n            </div>\r\n            <div className={'main-searchFilter'}>\r\n              <span className={'main-name'}>Имя автора</span>\r\n              <input className={'main-search'}\r\n                     ref={searchGenreRef}\r\n                     name={'songArtist'}\r\n                     value={inputs.songArtist}\r\n                     onChange={handleChange}/>\r\n            </div>\r\n            <div className={'main-searchFilter'}>\r\n              <span className={'main-name'}>Жанр</span>\r\n              <input className={'main-search'}\r\n                     name={'songGenre'}\r\n                     onBlur={() => {\r\n                       setTimeout(() => {\r\n                         setSuggested([]);\r\n                       }, 100);\r\n                     }}\r\n                     value={inputs.songGenre}\r\n                     onChange={searchGenre}/>\r\n              {suggested.length ?\r\n                <div ref={genreSuggested} className={'main-suggestedWords'}>\r\n                  {suggested.map((word: string, index, array) => {\r\n                      return (\r\n                        <div onClick={() => {\r\n                          setSuggested([]);\r\n                          setInputs((prevState: any) => ({ ...prevState, songGenre: word }));\r\n                        }}  className={'main-suggestedItem'}>\r\n                          <span className={'main-suggestedName'}>{word}</span>\r\n                          {index !== array.length - 1 ?\r\n                          <hr className={'main-suggestedLine'}/> : null}\r\n                        </div>\r\n                      )}\r\n                  )}\r\n                  </div> : null\r\n                }\r\n            </div>\r\n            <div className={'main-stared'}>\r\n              <label className=\"main-checkbox path\">\r\n                <input onChange={(e: any) => setStared(e.target.checked)} type=\"checkbox\"/>\r\n                <svg viewBox=\"0 0 21 21\">\r\n                  <path\r\n                    d=\"M5,10.75 L8.5,14.25 L19.4,2.3 C18.8333333,1.43333333 18.0333333,1 17,1 L4,1 C2.35,1 1,2.35 1,4 L1,17 C1,18.65 2.35,20 4,20 L17,20 C18.65,20 20,18.65 20,17 L20,7.99769186\"></path>\r\n                </svg>\r\n              </label>\r\n              <span className={'main-staredText'}>В избранном</span>\r\n            </div>\r\n            <button onClick={searchSongs} className={'main-button'}>\r\n              Искать\r\n            </button>\r\n          </div>\r\n        </section>\r\n        <section className={'main-songs'}>\r\n          <div>\r\n            {\r\n              songsContent ? songsContent : 'Начните поиск'\r\n            }\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </>\r\n  )\r\n}","import TextInput from \"./TextInput\";\r\nexport default TextInput;","import {FC, HTMLInputTypeAttribute} from 'react';\r\nimport './TextInput.scss';\r\nimport {generateUniqueId} from \"../../../helpers\";\r\n\r\ninterface TextInputProps {\r\n  placeholder: string;\r\n  name: string;\r\n  type?: HTMLInputTypeAttribute;\r\n}\r\n\r\nconst TextInput: FC<TextInputProps> = ({placeholder, name, type = 'input'}) => {\r\n  const uniqueId = generateUniqueId();\r\n  return (\r\n    <div className='customTextInput'>\r\n      <input type={type}\r\n             className='customTextInput-input'\r\n             placeholder={placeholder}\r\n             name={name}\r\n             id={uniqueId}\r\n             required/>\r\n      <label htmlFor={uniqueId} className='customTextInput-label'>\r\n        {placeholder}\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TextInput;","export const generateUniqueId = function() {\r\n  return Date.now().toString(36) + Math.random().toString(36).substr(2);\r\n}","import FormButton from \"./FormButton\";\r\nexport default FormButton;","import './FormButton.scss';\r\nimport {ButtonHTMLAttributes, FC, FormEvent, HTMLInputTypeAttribute} from \"react\";\r\n\r\ninterface LoginButtonProps {\r\n  type?: 'submit' | undefined;\r\n  name: string;\r\n  onClick: (arg0: any) => void;\r\n}\r\n\r\nconst FormButton: FC<LoginButtonProps> = ({type, name, onClick}) => {\r\n  return (\r\n    <button\r\n      className={'formButton'}\r\n      onClick={(e) => onClick(e)}\r\n      type={type}>{name}</button>\r\n  )\r\n}\r\n\r\nexport default FormButton;","import Authorization from \"./Authorization\";\r\nexport default Authorization;","import './Authorization.scss';\r\nimport TextInput from \"../UI/textInput\";\r\nimport {setLoader, signIn, signUp} from \"../../redux/actionCreators\";\r\nimport {FormEvent, useEffect} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport FormButton from \"../UI/loginButton\";\r\nimport useReduxStatePropertie from \"../../hooks/useReduxStatePropertie\";\r\n\r\nexport default function Authorization() {\r\n  const errorMessage = useReduxStatePropertie('signInErrorMsg');\r\n  const dispatch = useDispatch();\r\n\r\n  function signInForm(e: FormEvent) {\r\n    e.preventDefault();\r\n    const {login, password} = document.forms.namedItem('loginForm')!;\r\n    dispatch(signIn({\r\n      login: login.value,\r\n      password: password.value\r\n    }));\r\n  }\r\n\r\n  function signUpForm(e: FormEvent) {\r\n    e.preventDefault();\r\n    const {login, password} = document.forms.namedItem('loginForm')!;\r\n    dispatch(signUp({\r\n      login: login.value,\r\n      password: password.value\r\n    }));\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.forms.namedItem('loginForm')!.login.focus();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    errorMessage && setLoader(false);\r\n  }, [ errorMessage ]);\r\n\r\n  return (\r\n    <main className={'authorization'}>\r\n      <form className={'authorization-loginForm'} name={'loginForm'}>\r\n        { errorMessage ? <span className={'authorization-errorMessage'}>{errorMessage}</span> : null}\r\n        <TextInput\r\n          name={'login'}\r\n          placeholder={'Логин'}/>\r\n        <TextInput\r\n          name={'password'}\r\n          placeholder={'Пароль'}\r\n          type={'password'}/>\r\n        <div className={'authorization-buttons'}>\r\n          <FormButton name={'Войти'} onClick={signInForm}></FormButton>\r\n          <FormButton name={'Зарегистрироваться'} onClick={signUpForm}></FormButton>\r\n        </div>\r\n      </form>\r\n    </main>\r\n  )\r\n}","import CustomSpinner from \"./CustomSpinner\";\r\nexport default CustomSpinner;","import {FC} from \"react\";\r\nimport {ScaleLoader} from \"react-spinners\";\r\nimport './CustomSpinner.scss';\r\n\r\ninterface CustomSpinnerProps {\r\n  color?: 'primary' | string;\r\n}\r\n\r\nconst CustomSpinner: FC<CustomSpinnerProps> = ({color}) => {\r\n  switch (color) {\r\n    case 'primary':\r\n      color = '#4eb5f1'\r\n  }\r\n  return (\r\n    <div className={'customSpinner-wrapper'}>\r\n      <ScaleLoader\r\n        color={color}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomSpinner;","import Profile from \"./Profile\";\r\nexport default Profile;","import {FC, useCallback, useEffect, useState} from \"react\";\r\nimport \"./Profile.scss\";\r\nimport {signOut} from \"../../redux/actionCreators\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\ninterface ProfileProps {\r\n\r\n}\r\n\r\nconst Profile: FC<ProfileProps> = () => {\r\n  const dispatch = useDispatch();\r\n  const [userInfo, setUserInfo] = useState<any>('');\r\n  const [ratedMovies, setRatedMovies] = useState([]);\r\n  const [favMovies, setFavMovies] = useState([]);\r\n\r\n  const getUsersInfo = useCallback(async () => {\r\n    const username = localStorage.getItem('login');\r\n    setUserInfo(await fetch(`http://localhost:8080/user/accInfo?username=${username}`)\r\n      .then((response: any) => response.json()));\r\n  }, []);\r\n\r\n  const getFavMovies = useCallback(async () => {\r\n    const username = localStorage.getItem('login');\r\n    const movies: [] = await fetch(`http://localhost:8080/user/getFullFavs?username=${username}`).then((response: any) => response.json());\r\n    setFavMovies(movies.reduce((acc: any, curr: any) => {\r\n      acc.push(<div className={'movie'}>\r\n        <span className={'movie-field movie-title'}>{curr.title}</span>\r\n        <span className={'movie-field movie-genres'}>Жанры: {curr.genres}</span>\r\n        <span className={'movie-field movie-year'}>Год выпуска: {curr.year}</span>\r\n        <span className={'movie-field movie-tags'}>Теги: {curr.tags}</span>\r\n      </div>);\r\n      return acc;\r\n    }, []));\r\n  }, []);\r\n\r\n  const getRatedMovies = useCallback(async () => {\r\n    const username = localStorage.getItem('login');\r\n    const movies: [] = await fetch(`http://localhost:8080/user/getScored?username=${username}`).then((response: any) => response.json());\r\n    setRatedMovies(movies.reduce((acc: any, curr: any) => {\r\n      acc.push(<div className={'movie'}>\r\n        <span className={'movie-field movie-title'}>{curr.title}</span>\r\n        <span className={'movie-field movie-genres'}>Жанры: {curr.genres}</span>\r\n        <span className={'movie-field movie-year'}>Год выпуска: {curr.year}</span>\r\n        <span className={'movie-field movie-tags'}>Теги: {curr.tags}</span>\r\n      </div>);\r\n      return acc;\r\n    }, []));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getUsersInfo();\r\n    getFavMovies();\r\n    getRatedMovies();\r\n  }, []);\r\n\r\n  return (\r\n    <main className={'profile'}>\r\n      <div className={'profile-info'}>\r\n        <span className={'profile-name'}>{userInfo.username}</span>\r\n        <button className={'profile-signout'} onClick={\r\n          () => {\r\n            dispatch(signOut());\r\n            localStorage.removeItem('login');\r\n            localStorage.removeItem('password');\r\n          }\r\n        }>Выйти</button>\r\n      </div>\r\n      <span className={'profile-filmsAmount'}>Оцененных: {userInfo.count_rated || 0}</span>\r\n      <span className={'profile-lastFilms'}>Последние оцененные: </span>\r\n      <div className={'profile-rated'}>\r\n        {ratedMovies}\r\n      </div>\r\n      <span className={'profile-filmsAmount'}>Избранных: {userInfo.count_favorites || 0}</span>\r\n      <span className={'profile-lastFilms'}>Последние избранные: </span>\r\n      <div className={'profile-fav'}>\r\n        {favMovies}\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Profile;","import {FC, useCallback, useEffect, useState} from \"react\";\r\nimport \"./Admin.scss\";\r\nimport {generateUniqueId} from \"../../helpers\";\r\n\r\ninterface AdminProps {\r\n\r\n}\r\n\r\nconst Admin: FC<AdminProps> = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [userToPromote, setUserToPromote] = useState('');\r\n  const [songsContent, setSongsContent] = useState<any>(null);\r\n  const [songName, setSongName] = useState('');\r\n\r\n  async function searchSongs() {\r\n    const songs = await fetch(`http://localhost:8080/song/getFiltred?name=${songName}&artist=&username=&genres=&offset=${0}&limit=${5}`)\r\n      .then((response: any) => response.json());\r\n\r\n    if (songs.length === 0) {\r\n      return setSongsContent('Ни одной песни не было найдено');\r\n    }\r\n\r\n    setSongsContent(songs.reduce((acc: any, curr: any) => {\r\n      // @ts-ignore\r\n      acc.push(<div className={'song'}>\r\n        <span className={'song-field song-title'}>{curr.name}</span>\r\n        <span className={'song-field song-genres'}>Жанры: {curr.genres}</span>\r\n        <span className={'song-field song-year'}>Год выпуска: {curr.year}</span>\r\n        <span className={'song-field song-tags'}>Теги: {curr.tags}</span>\r\n        <button className={'admin-userRemove'} onClick={() => deleteSongById(curr.songId)}>X</button>\r\n      </div>);\r\n      return acc;\r\n    }, []));\r\n  }\r\n\r\n  async function deleteUser(username: string) {\r\n    await getUsers();\r\n    return await fetch(`http://localhost:8080/admin/deleteUser?username=${username}`);\r\n  }\r\n\r\n  async function deleteSongById(songToDelete: number) {\r\n    await fetch(`http://localhost:8080/admin/deleteSong?songId=${songToDelete}`);\r\n    searchSongs();\r\n  }\r\n\r\n  async function promoteUserById() {\r\n    return await fetch(`http://localhost:8080/admin/giveAdminRoot?username=${userToPromote}`);\r\n  }\r\n\r\n  async function getUsers() {\r\n    const users: [] = await fetch(`http://localhost:8080/admin/getAllUsers?offset=0&limit=20`).then((response: any) => response.json());\r\n    setUsers(users.reduce((acc: any, curr: any) => {\r\n      acc.push(<div className={'user'}>\r\n        <span className={'user-id'}></span>\r\n        <span className={'user-login'}>Логин: {curr.username}</span>\r\n        <span className={'user-password'}>Пароль: {curr.password}</span>\r\n        <span className={'user-password'}>ID: {curr.userId}</span>\r\n        <button className={'admin-userRemove'} onClick={() => deleteUser(curr.username)}>X</button>\r\n      </div>);\r\n      return acc;\r\n    }, []));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <main className={'admin'}>\r\n      <h2 className={'admin-header'}>Админская панель</h2>\r\n      <div className={'admin-movies'}>\r\n        <h2>Управление песнями</h2>\r\n        <div className={'admin-addMovie'}>\r\n          <span className={'admin-fieldName'}>Название</span>\r\n          <input className={'admin-movieInput'} value={songName} onChange={(e: any) => setSongName(e.target.value)}/>\r\n          <button onClick={searchSongs} className={'admin-addMovieButton'}>Искать</button>\r\n        </div>\r\n        {\r\n          songsContent ?\r\n            <>\r\n              <h2>Песни:</h2>\r\n              <div>{songsContent}</div>\r\n            </>\r\n          : null\r\n        }\r\n      </div>\r\n      <div className={'admin-users'}>\r\n        <h2>Управление пользователями</h2>\r\n        <span className={'admin-promoteUser'}>Сделать пользователя админом (by ID):</span>\r\n        <div className={'admin-userPromote'}>\r\n          <input value={userToPromote} onChange={(e: any) => setUserToPromote(e.target.value)} className={'admin-movieInput'} />\r\n          <button onClick={promoteUserById} className={'admin-promoteUserButton'}>Выдать права администратора</button>\r\n        </div>\r\n        <h3>Пользователи:</h3>\r\n        {users}\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Admin;","import AdminProps from \"./Admin\";\r\nexport default AdminProps;","import './App.scss';\r\nimport {Route, BrowserRouter, Routes, HashRouter} from \"react-router-dom\";\r\nimport useReduxStatePropertie from \"./hooks/useReduxStatePropertie\";\r\nimport { useMemo, useEffect } from \"react\";\r\nimport Main from \"./components/main\";\r\nimport Authorization from \"./components/authorization\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {checkAuthorizationStatus, setAuthorized} from \"./redux/actionCreators\";\r\nimport CustomSpinner from \"./components/UI/customSpinner\";\r\nimport Profile from \"./components/profile\";\r\nimport Admin from \"./components/admin\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const isAuthorized = useReduxStatePropertie('isAuthorized');\r\n  const isLoaderNecessary = useReduxStatePropertie('isLoaderNecessary');\r\n  const content = useMemo(() => {\r\n    return <Route path=\"/\" element={isAuthorized ? <Main/> : <Authorization/>}/>\r\n  }, [isAuthorized]);\r\n  const isAdmin = localStorage.getItem('isAdmin');\r\n\r\n  useEffect(() => {\r\n    dispatch(checkAuthorizationStatus());\r\n   }, [ ]);\r\n\r\n  return (\r\n    <HashRouter>\r\n      {\r\n        isLoaderNecessary ?\r\n          <CustomSpinner color={'primary'}/>\r\n          :\r\n          <Routes>\r\n            <Route path={'/profile'} element={isAuthorized ? <Profile/> : <Authorization/>}></Route>\r\n            <Route path={'/admin'} element={isAuthorized && isAdmin ? <Admin/> : <Main/>}></Route>\r\n            { content }\r\n          </Routes>\r\n      }\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {Reducer} from \"redux\";\r\nimport {IAction} from './actionCreators';\r\nimport actionTypes from \"./actionTypes\";\r\nimport {State} from '../types/redux';\r\n\r\nconst initialState: State = {\r\n  isAuthorized: false,\r\n  signInErrorMsg: '',\r\n  isLoaderNecessary: false\r\n};\r\n\r\nconst reducer: Reducer = (state: State = initialState, action: IAction): State => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_AUTHORIZED:\r\n      return {\r\n        ...state,\r\n        isAuthorized: action.payload\r\n      };\r\n    case actionTypes.SET_LOADER:\r\n      return {\r\n        ...state,\r\n        isLoaderNecessary: action.payload\r\n      };\r\n    case actionTypes.SIGNOUT:\r\n      return {\r\n        ...state,\r\n        isAuthorized: false\r\n      };\r\n    case actionTypes.SET_SIGNIN_ERROR_MSG:\r\n      return {\r\n        ...state,\r\n        signInErrorMsg: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","const appConfig = {\r\n  backendProtocol: 'http',\r\n  backendAddress: 'localhost:8080'\r\n}\r\n\r\nexport default appConfig;","import { LoginData } from \"../types/redux\";\r\nimport appConfig from \"../appConfig\";\r\n\r\ninterface AuthorizationService {\r\n  backendProtocol: string;\r\n  backendAddress: string;\r\n  controller: AbortController;\r\n  signal: AbortSignal;\r\n};\r\n\r\nclass AuthorizationService implements AuthorizationService {\r\n  constructor() {\r\n    this.backendProtocol = appConfig.backendProtocol;\r\n    this.backendAddress = appConfig.backendAddress;\r\n  }\r\n\r\n  signIn = async (loginData: LoginData): Promise<any> => {\r\n    const response = await fetch(`${this.backendProtocol}://${this.backendAddress}/user/aut?username=${loginData.login}&password=${loginData.password}`)\r\n      .then((response: any) => {\r\n        return response.json();\r\n      });\r\n\r\n    return response;\r\n  }\r\n\r\n  signUp = async (loginData: LoginData): Promise<any> => {\r\n    const response = await fetch(`${this.backendProtocol}://${this.backendAddress}/user/reg?username=${loginData.login}&password=${loginData.password}`)\r\n      .then((response: any) => {\r\n        return response.json();\r\n      });\r\n\r\n    return response;\r\n  }\r\n}\r\n\r\nexport default AuthorizationService;\r\n","import {IAction, setLoader, setSigninErrorMsg} from './../redux/actionCreators';\r\nimport { put, call, takeEvery } from 'redux-saga/effects'\r\nimport { setAuthorized } from \"../redux/actionCreators\";\r\nimport actionTypes from \"../redux/actionTypes\";\r\nimport AuthorizationService from '../services/authorizationService';\r\nimport {AuthDTO} from '../types/dto';\r\n\r\nconst service: any = new AuthorizationService();\r\n\r\nfunction* signInWorker(action: IAction) {\r\n  try {\r\n    const authorizationData: AuthDTO = yield call(service.signIn, action.payload)\r\n\r\n    if (authorizationData.message === 'bigBlackCock') {\r\n      yield put(setSigninErrorMsg('Введены некорректные данные'));\r\n    }\r\n\r\n    localStorage.setItem('isAdmin', authorizationData.isAdmin as any !== 'false' ? 'true' : '');\r\n    if (authorizationData?.message === 'success') {\r\n      localStorage.setItem('login', action.payload.login);\r\n      localStorage.setItem('password', action.payload.password);\r\n\r\n      yield put(setAuthorized(true));\r\n      yield put(setSigninErrorMsg(''));\r\n    }\r\n  } catch(e: any) {\r\n    console.error('An error thrown while dispatching signing, result: ', e.message);\r\n  }\r\n}\r\n\r\nfunction* signUpWorker(action: IAction) {\r\n  try {\r\n    const authorizationData: AuthDTO = yield call(service.signUp, action.payload)\r\n\r\n    if (authorizationData.message === 'bigBlackCock') {\r\n      yield put(setSigninErrorMsg('Такой логин уже существует'));\r\n    }\r\n\r\n    localStorage.setItem('isAdmin', '');\r\n\r\n    if (authorizationData?.message === 'success') {\r\n      localStorage.setItem('login', action.payload.login);\r\n      localStorage.setItem('password', action.payload.password);\r\n\r\n      yield put(setAuthorized(true));\r\n      yield put(setSigninErrorMsg(''));\r\n    }\r\n  } catch(e: any) {\r\n    console.error('An error thrown while dispatching signing, result: ', e.message);\r\n  }\r\n}\r\n\r\n\r\nfunction* checkAuthorizationStatus() {\r\n  yield put(setLoader(true));\r\n  if (localStorage.getItem('login') && localStorage.getItem('password')) {\r\n    const authorizationData: AuthDTO = yield call(service.signIn, {\r\n      login: localStorage.getItem('login'),\r\n      password: localStorage.getItem('password')\r\n    });\r\n    if (authorizationData?.message === 'success') {\r\n      yield put(setAuthorized(true));\r\n      yield put(setSigninErrorMsg(''));\r\n    } else {\r\n      yield put(setAuthorized(false));\r\n    }\r\n  } else {\r\n    yield put(setAuthorized(false));\r\n  }\r\n  yield put(setLoader(false));\r\n}\r\n\r\nfunction* authorizationSaga() {\r\n  yield takeEvery(actionTypes.CHECK_AUTHORIZATION_STATUS, checkAuthorizationStatus);\r\n  yield takeEvery(actionTypes.SIGNIN, signInWorker);\r\n  yield takeEvery(actionTypes.SIGNUP, signUpWorker);\r\n}\r\n\r\nexport default authorizationSaga;","import authorizationSaga from \"./authorizationSaga\";\r\n\r\nfunction* rootSaga() {\r\n  yield authorizationSaga()\r\n}\r\n\r\nexport default rootSaga;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { applyMiddleware, createStore, compose  } from \"redux\";\r\nimport {Provider} from \"react-redux\";\r\nimport reducer from \"./redux/reducer\";\r\nimport rootSaga from \"./sagas/rootSaga\";\r\nconsole.log(require('dotenv').config())\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst enchancer = process.env.NODE_ENV === 'development'\r\n  ? composeEnhancers(applyMiddleware(sagaMiddleware))\r\n  : applyMiddleware(sagaMiddleware);\r\n\r\nconst store = createStore(reducer, enchancer);\r\nsagaMiddleware.run(rootSaga);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}